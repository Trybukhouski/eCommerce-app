@import '@assets/styles/fonts.scss';
@import '@assets/styles/breakpoints.module.scss';

.basket-card {
  $shadow: 0px 4px 10px 1px var(--grey-100);
  $breakpoint: $contentDesktop;
  $image-width: clamp(8rem, 100vw - $breakpoint, 10rem);
  $accent-color: var(--orange-500);
  $font-size: 1.4rem;

  display: grid;
  grid-template-columns: $image-width 1fr 1fr;
  grid-template-rows: min-content 1fr 1.5fr;
  grid-auto-flow: column;
  gap: 0.3rem 1rem;
  justify-items: center;
  padding: var(--padding-xsm);
  border-radius: var(--big-border-radius);
  @include regularText();

  box-shadow: $shadow;

  :global(.name) {
    @include small-title();
    grid-column: 1 / 4;
    justify-self: start;
  }

  :global(.image) {
    grid-row: 2 / 4;
    width: $image-width;
    height: $image-width;
    aspect-ratio: 1 / 1;
    box-shadow: $shadow;
    border-radius: var(--big-border-radius);

    img {
      height: 100%;
      object-fit: cover;
    }
  }

  :global(.attributes) {
    display: grid;
    grid-template-rows: 1fr 1fr;
    justify-items: stretch;
    width: 10rem;

    div {
      display: grid;
      justify-items: end;
      align-items: center;
      grid-template-columns: 1fr 1fr;
      gap: 0 1rem;

      :last-child {
        text-align: end;
      }
    }

    h4::after {
      content: ':';
    }
  }

  :global(.prices) {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 2rem;

    > *::before {
      content: '$';
    }

    p {
      @include textAccent();
    }

    p:nth-child(1) {
      text-decoration: line-through;
      color: var(--grey-100);
    }

    p:only-of-type,
    p:nth-child(2) {
      text-decoration: none;
      color: var(--orange-500);
    }
  }

  :global(.quantity) {
    display: flex;
    flex-direction: row-reverse;
    align-items: center;
    justify-content: center;
    gap: 0.8rem;

    @include textAccent();

    p {
      line-height: $font-size;
      font-size: $font-size;
      transform: translateY(0.15em);
    }

    button {
      $button-size: calc($font-size + 0.2em);

      @include textAccent();
      font-size: $font-size;
      height: $button-size;
      width: $button-size;
      display: flex;
      align-items: center;
      justify-content: center;
      color: $accent-color;

      &:global(.reduce)::after {
        content: 'ᐊ';
        transform: translateY(0.15em);
      }
      &:global(.increase)::after {
        content: 'ᐅ';
        transform: translateY(0.15em);
      }

      &:hover {
        background-color: $accent-color;
        color: var(--white-100);
      }

      &:disabled {
        opacity: 0.5;
        pointer-events: none;
      }
    }
  }

  :global(.total) {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1.5rem;

    @include title();
    font-size: $font-size;
    margin: 0;

    > :first-child() {
      font-weight: 400;
    }

    > :nth-child(2) {
      color: $accent-color;

      &::before {
        content: '$';
      }
    }
  }

  :global(.delete) {
    $delete-color: var(--wrong-warning-color);

    &::after {
      content: '×';
      text-shadow: rgb(237 44 32 / 56%) 0 0 0.25em;
    }

    align-items: center;
    justify-content: center;
    font-size: 1.8rem;
    font-weight: bold;
    height: 2rem;
    aspect-ratio: 1 / 1;
    color: $delete-color;

    &:hover {
      color: var(--white-100);
      background-color: $delete-color;
    }
  }
}

.basket-card {
  $breakpoint: $contentDesktop;
  $image-width-mini: clamp(4rem, 100vw - 500px, 8rem);
  @media (max-width: $breakpoint) {
    grid-template-columns: minmax($image-width-mini, min-content) 1fr min-content;
    grid-template-rows: min-content 1fr 1.5fr min-content;

    :global(.image) {
      width: $image-width-mini;
      height: $image-width-mini;
    }

    :global(.quantity) {
      grid-row: 4 / 5;
      grid-column: 1 / 2;
    }

    :global(.total) {
      grid-row: 4 / 5;
      grid-column: 2 / 4;
    }

    :global(.delete) {
      grid-row: 1 / 2;
      grid-column: 3 / 4;
    }

    :global(.name) {
      grid-column: 1 / 3;
    }

    :global(.attributes),
    :global(.prices) {
      grid-column: 2 / 4;
    }

    @media (max-width: 400px) {
      :global(.prices),
      :global(.total) {
        flex-flow: column;
        gap: 0.5rem;
      }

      :global(.image) {
        grid-row: 2 / 3;
      }

      :global(.attributes) {
        width: min-content;
        div {
          grid-template-columns: 1fr;
          justify-items: center;
        }
      }

      :global(.total) div {
        grid-column: 2 / 4;
      }

      :global(.quantity) {
        flex-flow: column;
        grid-row: 3 / 5;

        button {
          transform: rotate(-90deg);
        }
      }
    }
  }
}
